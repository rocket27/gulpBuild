/** Flex Layout start **/
%flex-layout {
  display: flex;
}

%flex-wrap {
  flex-wrap: wrap;
}

%flex-layout-column {
  flex-direction: column;
}

%layout-row-wrap-start {
  @extend %flex-layout;
  @extend %flex-wrap;

  align-items: flex-start;
  justify-content: flex-start;
}

%layout-row-start {
  @extend %flex-layout;
}

%layout-row-start-center {
  @extend %flex-layout;

  align-items: center;
  justify-content: flex-start;
}

%layout-row-wrap-start-center {
  @extend %flex-layout;
  @extend %flex-wrap;

  align-items: center;
  justify-content: flex-start;
}

%layout-row-start-stretch {
  @extend %flex-layout;

  align-items: stretch;
  justify-content: flex-start;
}

%layout-row-center {
  @extend %flex-layout;

  align-items: center;
  justify-content: center;
}

%layout-row-wrap-center {
  @extend %layout-row-center;
  @extend %flex-wrap;
}

%layout-row-sb-center {
  @extend %flex-layout;

  align-items: center;
  justify-content: space-between;
}

%layout-row-sa-center {
  @extend %flex-layout;

  align-items: center;
  justify-content: space-around;
}

%layout-row-wrap-sa-center {
  @extend %flex-layout;
  @extend %flex-wrap;

  align-items: center;
  justify-content: space-around;
}

%layout-row-end-center {
  @extend %flex-layout;

  align-items: center;
  justify-content: flex-end;
}

%layout-column {
  @extend %flex-layout;
  @extend %flex-layout-column;
}

%layout-column-start {
  @extend %flex-layout;
  @extend %flex-layout-column;

  align-items: start;
  justify-content: start;
}

%layout-column-start-center {
  @extend %flex-layout;
  @extend %flex-layout-column;

  align-items: center;
  justify-content: start;
}

%layout-column-center {
  @extend %flex-layout;
  @extend %flex-layout-column;

  align-items: center;
  justify-content: center;
}
/** Flex Layout end **/
  
%stretch {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

%pseudo {
  content: '';
  display: block;
  position: absolute;
}

%round {
  border-radius: 50%;
}

@mixin centered($axis: 'both') {
  position: absolute;

  @if $axis == 'both' {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  @if $axis == 'x' {
    left: 50%;
    transform: translateX(-50%);
  }

  @if $axis == 'y' {
    top: 50%;
    transform: translateY(-50%);
  }
}

@mixin maxWidth($resolution) {
  @media (max-width: #{$resolution}px) {
    @content;
  }
}

@mixin minWidth($resolution) {
  @media (min-width: #{$resolution}px) {
    @content;
  }
}

@mixin range($minResolution, $maxResolution) {
  @media (min-width: #{$minResolution}px) and (max-width: #{$maxResolution}px) {
    @content;
  }
}

@mixin geIE10() {
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content;
  }
}

@mixin geFF16() {
  @supports (-moz-appearance:meterbar) {
    @content;
  }
}
